name: Image Build

on: [push]
  # push:
  #   branches: [ $default-branch ]
  # pull_request:
  #   branches: [ $default-branch ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
      - name: lint
        uses: dominikh/staticcheck-action@v1  # Running Staticcheck(https://github.com/dominikh/staticcheck-action)
        with:
          version: "latest"
  build-image:
    runs-on: ubuntu-latest
    outputs:
      image-digest: ${{ steps.push.outputs.digest }}
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
      - name: test
        run: go test -v ./...
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      # Build image and push to registry.
      # Image tag is generated from the meta step(In this case, it is the branch name)
      - name: Build and push Container image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4  # https://github.com/docker/build-push-action
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}  # Get tags from outputs of meta step
          labels: ${{ steps.meta.outputs.labels }}  # Get labels from outputs of meta step
      # Generates an artifact attestation for the image, which is an unforgeable statement about where and how it was built, and push it to registry. 
      # https://docs.github.com/ja/actions/how-tos/security-for-github-actions/using-artifact-attestations/using-artifact-attestations-to-establish-provenance-for-builds#generating-build-provenance-for-container-images
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2  # https://github.com/actions/attest-build-provenance
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
  image-scan:
    needs: build-image
    runs-on: ubuntu-latest
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@0.28.0  # https://github.com/aquasecurity/trivy-action
        with:
          image-ref: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}@${{ needs.build-image.outputs.image-digest }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true